global:
  scrape_interval:     60s # By default, scrape targets every 15 seconds.

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  # external_labels:
  #  monitor: 'codelab-monitor'

  external_labels:
    origin_prometheus: ${PROMETHEUS_HOST}

# Rules and alerts are read from the specified file(s)
# rule_files:
#   - ./rules.yaml
rule_files:
  - "./mysqld_exporter/mysql_exporter_recording_rules.yaml"

# Alerting specifies settings related to the Alertmanager
# alerting:
#   alertmanagers:
#     - static_configs:
#       - targets:
#         # Alertmanager's default port is 9093
#         - 'alertmanager:9093'
#         labels:
#           origin_prometheus: '${PROMETHEUS_HOST}'
# #        - '192.168.86.59:9093'

#remote_write:
# - url: http://192.168.86.53:9001/api/v1/push

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 60s
    static_configs:
      - targets: ['localhost:9090']
        labels:
          origin_prometheus: '${PROMETHEUS_HOST}'

  # Example job for node_exporter
  - job_name: 'node_exporter'
    static_configs:
      - targets: ['node_exporter:9100']
        labels:
          origin_prometheus: '${PROMETHEUS_HOST}'
    relabel_configs:
    - source_labels: [__address__]
      regex: '.*'
      target_label: instance
      replacement: '${PROMETHEUS_HOST}'

  # Example job for cadvisor
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
        labels:
          origin_prometheus: '${PROMETHEUS_HOST}'
    relabel_configs:
    - source_labels: [__address__]
      regex: '.*'
      target_label: instance
      replacement: '${PROMETHEUS_HOST}'

  # mysqld exporter
  - job_name: 'mysqld_exporter'
    static_configs:
      - targets: ['192.168.86.74:9104']
    tls_config:
      insecure_skip_verify: true
    relabel_configs:
    - source_labels: [__address__]
      regex: '.*'
      target_label: instance
      replacement: '${PROMETHEUS_HOST}'

  - job_name: postgres
    static_configs:
      - targets: ['192.168.86.74:9187']
    relabel_configs:
    - source_labels: [__address__]
      regex: '.*'
      target_label: instance
      replacement: '${PROMETHEUS_HOST}'

  # Example job for glances
  # - job_name: 'glances_exporter'
  #   static_configs:
  #     - targets: ['192.168.86.33:9091']
  #       labels:
  #         origin_prometheus: '${PROMETHEUS_HOST}'
  #   relabel_configs:
  #   - source_labels: [__address__]
  #     regex: '.*'
  #     target_label: instance
  #     replacement: '${PROMETHEUS_HOST}'

# fetch metrics from other prometheus instances
  # - job_name: 'prometheus-federation'
  #   scrape_interval: 60s
  #   scrape_timeout: 60s
  #   scheme: http
  #   honor_labels: true
  #   metrics_path: '/federate'
  #   params:
  #     'match[]':
  #       - '{__name__=~".+"}'
  #   static_configs:
  #     - targets:
  #       - '192.168.86.42:9090'

# fetch metrics from other instances running netdata
  # - job_name: 'netdata-scrape'
  #   metrics_path: '/api/v1/allmetrics'
  #   params:
  #     # format: prometheus | prometheus_all_hosts
  #     # You can use `prometheus_all_hosts` if you want Prometheus to set the `instance` to your hostname instead of IP
  #     format: [prometheus_all_hosts]
  #     #
  #     # sources: as-collected | raw | average | sum | volume
  #     # default is: average
  #     #source: [as-collected]
  #     #
  #     # server name for this prometheus - the default is the client IP
  #     # for Netdata to uniquely identify it
  #     #server: ['prometheus1']
  #   honor_labels: true
  #   static_configs:
  #     - targets:
  #       - 192.168.86.59:19999
