---
version: '3'

services:

  # db:
  #   build: ./mysql
  #   container_name: db
  #   restart: "no"
  #   env_file: .env
  #   environment:
  #     - MYSQL_DATABASE=wordpress
  #   volumes:
  #     - dbdata:/var/lib/mysql
  #   command: '--default-authentication-plugin=mysql_native_password'
  #   networks:
  #     - app-network

  wordpress:
    depends_on:
      - db
    image: wordpress:6.7.0-fpm-alpine
    container_name: wordpress
    restart: "no"
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=${MYSQL_DB_HOST}:3306
      - WORDPRESS_DB_USER=${MYSQL_DB_USER}
      - WORDPRESS_DB_PASSWORD=${MYSQL_DB_PASSWORD}
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - wordpress:/var/www/html
    networks:
      - app-network

  webserver:
    depends_on:
      - wordpress
    image: nginx:latest
    container_name: webserver
    restart: "no"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - wordpress:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
    networks:
      - app-network

  certbot:
    depends_on:
      - webserver
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - wordpress:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email ${EMAIL} --agree-tos --no-eff-email --force-renewal -d ${WORDPRESS_DOMAIN} -d www.${WORDPRESS_DOMAIN}

#   prometheus:
# #    depends_on:
# #      - webserver
#     image: prom/prometheus:latest
#     container_name: prometheus
#     ports:
#       - "9090:9090"
#     volumes:
#       - "./wordpress/prometheus:/etc/prometheus"
#       - "prometheus_data:/prometheus"
#     restart: unless-stopped
#     command:
#       - "--config.file=/etc/prometheus/prometheus.yaml"
#     networks:
#       - app-network

# using prometheus federation so running this here is not needed
  # alertmanager:
  #   depends_on:
  #     - prometheus
  #   image: prom/alertmanager:v0.23.0
  #   container_name: alertmanager
  #   restart: unless-stopped
  #   ports:
  #     - "9093:9093"
  #   volumes:
  #     - "./wordpress/prometheus/alertmanager:/etc/alertmanager/"
  #     - "alertmanager_data:/data"
  #   command: --config.file=/etc/alertmanager/alertmanager.yaml --log.level=debug
  #   networks:
  #     - app-network

  node_exporter:
    depends_on:
      - prometheus
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - app-network

  cadvisor:
    depends_on:
      - node_exporter
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    # ports:
    #   - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    restart: unless-stopped
    networks:
      - app-network

  mysqld_exporter:
    depends_on:
      - cadvisor
    container_name: mysqld_exporter
    ports:
      - '9104:9104'
    environment:
      - 'DATA_SOURCE_NAME=$${MYSQL_DB_USER}:${MYSQL_DB_PASSWORD}@(db:3306)/'
    image: prom/mysqld-exporter
    restart: unless-stopped
    networks:
      - app-network

volumes:
  certbot-etc:
  wordpress:
  dbdata:
  prometheus_data:
    external: true
  # alertmanager_data:
  #   external: true

networks:
  pihole:
