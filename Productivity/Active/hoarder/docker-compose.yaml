---
services:
  web:
    image: ghcr.io/hoarder-app/hoarder:${HOARDER_VERSION:-release}
    restart: unless-stopped
    container_name: hoarder-web
    volumes:
      - data:/data
    ports:
      - 3003:3000
    env_file:
      - .env
    environment:
      MEILI_ADDR: http://meilisearch:7700
      BROWSER_WEB_URL: http://chrome:9222
      DATA_DIR: /data
  chrome:
    image: gcr.io/zenika-hub/alpine-chrome:124
    container_name: hoarder-chrome
    restart: unless-stopped
    command:
      - --no-sandbox
      - --disable-gpu
      - --disable-dev-shm-usage
      - --remote-debugging-address=0.0.0.0
      - --remote-debugging-port=9222
      - --hide-scrollbars
  meilisearch:
    image: docker.io/getmeili/meilisearch:v1.12
    container_name: hoarder-meilisearch
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MEILI_NO_ANALYTICS: "true"
    volumes:
      # If seeing "Error: Your database version (X.XX.X) is incompatible with your current engine version (X.XX.X)."
      # then recreate the container with a new volume
      - meilisearch_20250107:/meili_data

  backup:
    image: docker.io/offen/docker-volume-backup:latest
    container_name: hoarder-backup
    restart: always
    env_file: ./backup.env
    volumes:
      - data:/backup/my-app-backup:ro
      - ./backups:/archive:Z
      # Mounting the Docker socket allows the script to stop and restart
      # the container during backup and to access the container labels to
      # specify custom commands. You can omit this if you don't want to
      # stop the container or run custom commands. In case you need to
      # proxy the socket, you can also provide a location by setting
      # `DOCKER_HOST` in the container
      # - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  meilisearch_20250107:
  data:

networks:
  default:
    external:
      name: hoarder_network
