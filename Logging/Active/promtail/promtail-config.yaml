server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: https://loki.local.timmybtech.com/loki/api/v1/push
    external_labels:
      host: vm304

scrape_configs:

- job_name: system
  static_configs:
  - targets:
      - localhost
    labels:
      job: syslog
      __path__: /var/log/syslog

- job_name: journal
  journal:
    json: false
    max_age: 12h
    path: /var/log/journal
    labels:
      job: systemd-journal
  relabel_configs:
    - source_labels: ['__journal__systemd_unit']
      target_label: 'unit'

# for servers running fail2ban
# - job_name: system
#   static_configs:
#   - targets:
#       - localhost
#     labels:
#       job: fail2ban
#       __path__: /var/log/fail2ban.log

# oracle linux
# - job_name: system
#   static_configs:
#   - targets:
#       - localhost
#     labels:
#       job: syslog
#       __path__: /var/log/messages

# docker logs if not using daemon.json or docker-compose.yaml
## must add to docker-compose.yml for this to work:
    # logging:
    #   driver: "json-file"
    #   options:
    #     tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
## end
# - job_name: docker
#   static_configs:
#   - targets:
#       - localhost
#     labels:
#       job: docker_logs
#       __path__: /var/lib/docker/containers/*/*.log

#   pipeline_stages:
#   - json:
#       expressions:
#         output: log
#         stream: stream
#         attrs:
#   - json:
#       expressions:
#         tag:
#       source: attrs
#   - regex:
#       expression: (?P<image_name>(?:[^|]*[^|])).(?P<container_name>(?:[^|]*[^|])).(?P<image_id>(?:[^|]*[^|])).(?P<container_id>(?:[^|]*[^|]))
#       source: tag
#   - timestamp:
#       format: RFC3339Nano
#       source: time
#   - labels:
#       tag:
#       stream:
#       image_name:
#       container_name:
#       image_id:
#       container_id:
#   - output:
#       source: output
